&time_control
 restart                             = .true.,
 run_days                            = 1,
 run_hours                           = 0,
 run_minutes                         = 0,
 run_seconds                         = 0,
 start_year                          = 2020, 2020, 2020, 2020, 2020,
 start_month                         = 05,   05,   05,   05,   05,
 start_day                           = 18,   18,   18,   18,   18,
 start_hour                          = 08,   08,   08,   08,   08,
 end_year                            = 2020, 2020, 2020, 2020, 2020,
 end_month                           = 05,   05,   05,   05,   05,
 end_day                             = 19,   19,   19,   19,   19,
 end_hour                            = 08,   08,   08,   08,   08,
 interval_seconds                    = 3600,
 input_from_file                     = .true.,.true.,.true.,.true.,.true.
 fine_input_stream                   = 0,    2,    2,    2,    2,                                   ! 2=read only static field from wrfinput file and interpolate other variables
 interp_soil_fine_lu                 = 8,    8,    8,    8,    8,
 auxinput1_inname                    = '../../03_temp/01_WPS/14_20200515/30/met_em.d<domain>.<date>',
 auxinput4_inname                    = '../../03_temp/02_WRF/14_20200515/30/wrflowinp_d<domain>',
 auxinput4_outname                   = '../../03_temp/02_WRF/14_20200515/30/wrflowinp_d<domain>',
 input_inname                        = '../../03_temp/02_WRF/14_20200515/30/wrfinput_d<domain>',
 input_outname                       = '../../03_temp/02_WRF/14_20200515/30/wrfinput_d<domain>',        ! doesn't work (need to move the file after real.exe)
 bdy_inname                          = '../../03_temp/02_WRF/14_20200515/30/wrfbdy_d<domain>',
 bdy_outname                         = '../../03_temp/02_WRF/14_20200515/30/wrfbdy_d<domain>',
 rst_outname                         = '../../03_temp/02_WRF/14_20200515/30/rst/wrfrst_d<domain>_<date>',
 history_outname                     = '../../04_output/02_WRF/14_20200515/30/wrfout_d<domain>_<date>', ! attention underscore pour la sortie pour entree dans WRF2ARPS
 auxhist8_outname                    = '../../04_output/02_WRF/14_20200515/30/wrf_static_d<domain>',
 auxhist24_outname                   = '../../04_output/02_WRF/14_20200515/30/wrflux_d<domain>_<date>'
 auxinput4_interval                  = 60,    60,    60,    60,    60,
 history_interval                    = 10,    10,    10,    10,    10,                ! dynamic standard output
 auxhist8_interval                   = 1000000000, 1000000000, 1000000000, 1000000000, 1000000000,          ! static fields
 auxhist24_interval_m                = 10,    10,    10,    10,    10,
 restart_interval                    = 240,
 frames_per_outfile                  = 1,     1,     1,     1,     1, 
 frames_per_auxhist8                 = 1,     1,     1,     1,     1,
 frames_per_auxhist24                = 1,     1,     1,     1,     1,
 io_form_auxinput4                   = 2,
 io_form_history                     = 2,
 io_form_auxinput2                   = 2,                                                         ! needed for fine_input_stream
 io_form_auxhist8                    = 2,
 io_form_auxhist24                   = 2,
 io_form_restart                     = 2,
 io_form_input                       = 2,
 io_form_boundary                    = 2,
 debug_level                         = 0,
 iofields_filename                   = "wrfio_d01.txt", "wrfio_d02.txt", "wrfio_d03.txt", "wrfio_d04.txt", "wrfio_d05.txt"
 ignore_iofields_warning             = .true.,  !set to true to continue the run even if there are errors in user-specified files
 /

 &domains
 max_dom                             = 5,
 reasonable_time_step_ratio          = 9,           ! ratio DT_max/DX : WRF advise to set it to 6. According to Skamarock (2017) eq.3.55, a ratio of 9 allow u_max = 90 m/s
 time_step                           = 60,
 time_step_fract_num                 = 0,
 time_step_fract_den                 = 1,
 e_we                                = 361,   361,    361,    361,    361,
 e_sn                                = 361,   361,    361,    361,    361,
 vert_refine_method                  = 0,       0,      0,      2,      0,              ! 2 = specified or computed eta levels, 1 = integer ratio
 rebalance                           = 1,                                       ! must be set to 1 if vert_refine_methode = 1 or 2
 e_vert                              = 52,     52,     52,    139,    139,              ! e_vert2 = n(e_vert1 - 1) + 1 pour vert_refine_method = 2
 eta_levels(1:52)                    = 1.0    , 0.99751, 0.99478, 0.99178, 0.98849, 0.98488, 0.98092, 0.97658, 0.97182, 0.9666 ,
                                       0.9609 , 0.95465, 0.94783, 0.94037, 0.93223, 0.92335, 0.91366, 0.90311, 0.89163, 0.87913,
                                       0.86558, 0.85091, 0.83508, 0.81806, 0.79977, 0.78011, 0.759  , 0.73636, 0.71213, 0.68625,
                                       0.65867, 0.62932, 0.59815, 0.56517, 0.53046, 0.49417, 0.45625, 0.41685, 0.37612, 0.33407,
                                       0.29114, 0.24776, 0.20442, 0.16243, 0.12759, 0.09878, 0.07458, 0.05414, 0.0369 , 0.0224 ,
                                       0.01023, 0.0    ,
 eta_levels(53:104)                  = 1.0    , 0.99751, 0.99478, 0.99178, 0.98849, 0.98488, 0.98092, 0.97658, 0.97182, 0.9666 ,
                                       0.9609 , 0.95465, 0.94783, 0.94037, 0.93223, 0.92335, 0.91366, 0.90311, 0.89163, 0.87913,
                                       0.86558, 0.85091, 0.83508, 0.81806, 0.79977, 0.78011, 0.759  , 0.73636, 0.71213, 0.68625,
                                       0.65867, 0.62932, 0.59815, 0.56517, 0.53046, 0.49417, 0.45625, 0.41685, 0.37612, 0.33407,
                                       0.29114, 0.24776, 0.20442, 0.16243, 0.12759, 0.09878, 0.07458, 0.05414, 0.0369 , 0.0224 ,
                                       0.01023, 0.0    ,
 eta_levels(105:156)                 = 1.0    , 0.99751, 0.99478, 0.99178, 0.98849, 0.98488, 0.98092, 0.97658, 0.97182, 0.9666 ,
                                       0.9609 , 0.95465, 0.94783, 0.94037, 0.93223, 0.92335, 0.91366, 0.90311, 0.89163, 0.87913,
                                       0.86558, 0.85091, 0.83508, 0.81806, 0.79977, 0.78011, 0.759  , 0.73636, 0.71213, 0.68625,
                                       0.65867, 0.62932, 0.59815, 0.56517, 0.53046, 0.49417, 0.45625, 0.41685, 0.37612, 0.33407,
                                       0.29114, 0.24776, 0.20442, 0.16243, 0.12759, 0.09878, 0.07458, 0.05414, 0.0369 , 0.0224 ,
                                       0.01023, 0.0    ,
 eta_levels(157:295)                 = 1.0    , 0.99752, 0.99505, 0.99258, 0.99011, 0.98765, 0.9852 , 0.98275, 0.9803 , 0.97786, 
                                       0.97543, 0.973  , 0.97057, 0.96815, 0.96573, 0.96332, 0.96091, 0.95851, 0.95611, 0.95372, 
                                       0.95133, 0.94895, 0.94657, 0.94419, 0.94182, 0.93946, 0.9371 , 0.93474, 0.93239, 0.93004, 
                                       0.9277 , 0.92536, 0.92303, 0.9207 , 0.91838, 0.91606, 0.91375, 0.91144, 0.90913, 0.90683, 
                                       0.90453, 0.90224, 0.89996, 0.89767, 0.89539, 0.89312, 0.89085, 0.88859, 0.88633, 0.88407, 
                                       0.88182, 0.87946, 0.87699, 0.8744 , 0.87169, 0.86885, 0.86587, 0.86276, 0.85949, 0.85608, 
                                       0.8525 , 0.84876, 0.84485, 0.84075, 0.83647, 0.83199, 0.82731, 0.82242, 0.8173 , 0.81196, 
                                       0.80637, 0.80054, 0.79446, 0.7881 , 0.78147, 0.77456, 0.76735, 0.75984, 0.75202, 0.74386, 
                                       0.73537, 0.72654, 0.71735, 0.7078 , 0.69787, 0.68758, 0.67687, 0.66578, 0.65428, 0.64236, 
                                       0.63004, 0.61727, 0.6041 , 0.59046, 0.57642, 0.56192, 0.54701, 0.53166, 0.51589, 0.49971, 
                                       0.4831 , 0.46613, 0.44873, 0.43104, 0.41291, 0.39458, 0.37583, 0.35694, 0.33771, 0.3184 , 
                                       0.29885, 0.2793 , 0.25967, 0.24107, 0.22321, 0.20639, 0.19012, 0.17484, 0.16027, 0.14634, 
                                       0.13332, 0.12081, 0.10906, 0.09811, 0.08789, 0.07837, 0.0695 , 0.06123, 0.05351, 0.04632, 
                                       0.03962, 0.03337, 0.02754, 0.02211, 0.01705, 0.01233, 0.00793, 0.00382, 0.0    ,  
 eta_levels(296:434)                 = 1.0    , 0.99752, 0.99505, 0.99258, 0.99011, 0.98765, 0.9852 , 0.98275, 0.9803 , 0.97786, 
                                       0.97543, 0.973  , 0.97057, 0.96815, 0.96573, 0.96332, 0.96091, 0.95851, 0.95611, 0.95372, 
                                       0.95133, 0.94895, 0.94657, 0.94419, 0.94182, 0.93946, 0.9371 , 0.93474, 0.93239, 0.93004, 
                                       0.9277 , 0.92536, 0.92303, 0.9207 , 0.91838, 0.91606, 0.91375, 0.91144, 0.90913, 0.90683, 
                                       0.90453, 0.90224, 0.89996, 0.89767, 0.89539, 0.89312, 0.89085, 0.88859, 0.88633, 0.88407, 
                                       0.88182, 0.87946, 0.87699, 0.8744 , 0.87169, 0.86885, 0.86587, 0.86276, 0.85949, 0.85608, 
                                       0.8525 , 0.84876, 0.84485, 0.84075, 0.83647, 0.83199, 0.82731, 0.82242, 0.8173 , 0.81196, 
                                       0.80637, 0.80054, 0.79446, 0.7881 , 0.78147, 0.77456, 0.76735, 0.75984, 0.75202, 0.74386, 
                                       0.73537, 0.72654, 0.71735, 0.7078 , 0.69787, 0.68758, 0.67687, 0.66578, 0.65428, 0.64236, 
                                       0.63004, 0.61727, 0.6041 , 0.59046, 0.57642, 0.56192, 0.54701, 0.53166, 0.51589, 0.49971, 
                                       0.4831 , 0.46613, 0.44873, 0.43104, 0.41291, 0.39458, 0.37583, 0.35694, 0.33771, 0.3184 , 
                                       0.29885, 0.2793 , 0.25967, 0.24107, 0.22321, 0.20639, 0.19012, 0.17484, 0.16027, 0.14634, 
                                       0.13332, 0.12081, 0.10906, 0.09811, 0.08789, 0.07837, 0.0695 , 0.06123, 0.05351, 0.04632, 
                                       0.03962, 0.03337, 0.02754, 0.02211, 0.01705, 0.01233, 0.00793, 0.00382, 0.0    ,  
 p_top_requested                     = 5000,
 num_metgrid_levels                  = 38,
 num_metgrid_soil_levels             = 4,
 dx                                  = 9477,
 dy                                  = 9477,
 grid_id                             = 1,     2,     3,     4,     5,
 parent_id                           = 0,     1,     2,     3,     4,
 i_parent_start                      = 1,     121,   121,   121,   121,
 j_parent_start                      = 1,     121,   121,   121,   121,
 parent_grid_ratio                   = 1,     3,     3,     3,     3,
 parent_time_step_ratio              = 1,     3,     3,     3,     3,
 feedback                            = 0,
 smooth_option                       = 0,           !used only with feedback
 max_ts_locs                         = 13,
 max_ts_level                        = -1,    -1,    -1,    -1,    -1,
 tslist_unstagger_winds              = .true.,
 interp_method_type                  = 2,           ! horizontal interpolation for nest : 2=SINT (default, change only if need a too big DX ratio)
 /

 &physics
 physics_suite                       = 'CONUS'
 mp_physics                          =  6,     6,     6,     6,     6,  ! 6  = WSM6
 cu_physics                          =  1,     0,     0,     0,     0,  ! CONUS = Tiedtke, 1 = Kain-Fritsch, 11 = Multi-scale Kain-Fritsch
 ra_lw_physics                       = -1,    -1,    -1,    -1,    -1,  ! CONUS = RRTMG, 14 = RRTMG-K
 ra_sw_physics                       = -1,    -1,    -1,    -1,    -1,  ! CONUS = RRTMG, 14 = RRTMG-K
 bl_pbl_physics                      = -1,    -1,    -1,     0,     0,  ! CONUS = MYJ, 0 = LES
 sf_sfclay_physics                   = -1,    -1,    -1,    -1,    -1,  ! CONUS = Eta
 sf_surface_physics                  = -1,    -1,    -1,    -1,    -1,  ! CONUS = Noah
 radt                                =  9,     9,     9,     9,     9,  ! (min) 1min/DX advised, same for all nests
 swint_opt                           =  1,                              ! 1=use interpolation for radiation between time steps (useful to save times for high res simu)
 slope_rad                           =  1,     1,     1,     1,     1,  ! 1=take slope into account for radiation
 topo_shading                        =  0,     0,     0,     0,     0,  ! 1=take shading by neighboors into account (activate only for DX < 1km)
 bldt                                =  0,     0,     0,     0,     0, 
 cudt                                =  0,     0,     0,     0,     0,
 icloud                              =  1,
 fractional_seaice                   =  1,
 hail_opt                            =  0,                              ! 0 = disable hail in WSM6
 num_land_cat                        = 21,                              ! 21 = MODIS landuse, 24 = clc2usgs (or USGS) landuse 
 sf_urban_physics                    =  0,     0,     0,     0,     0,  ! 0=no urban model
 rdlai2d                             = .true.,                          ! use LAI from input file, default=.false. : use LAI from tables
 sst_update                          = 1,                               ! time_varying SST, VEGFRA, LAI, albedo, needs a auxinput4 file
 default_soiltype                    = 6,                               ! New option for when landuse is not water but no soiltype is defined in the dataset, WRF default is 8
 /

 &fdda
 /

 &dynamics
 hybrid_opt                          = 2, 
 w_damping                           = 1,
 diff_opt                            = 2,      2,      2,      2,      2,
 mix_full_fields                     = .true., .true., .true., .true., .true.,   ! recommended with diff_opt=2
 km_opt                              = 4,      4,      4,      2,      2,
 sfs_opt                             = 0,      0,      0,      0,      0,        ! 1 = NBA 2 = TKE based NBA 
 mix_isotropic                       = 0,      0,      0,      0,      0,        ! 0 = anisotropic : km_h!=km_v, 1=isotropic : km_h=km_v=km
 damp_opt                            = 3,
 zdamp                               = 5000.,  5000.,  5000.,  5000.,  5000.,
 dampcoef                            = 0.2,    0.2,    0.2,    0.2,    0.2,
 non_hydrostatic                     = .true., .true., .true., .true., .true.,
 moist_adv_opt                       = 1,      1,      1,      1,      1,
 scalar_adv_opt                      = 1,      1,      1,      1,      1,
 tke_adv_opt                         = 1,      1,      1,      1,      1,
 gwd_opt                             = 1,      0,      0,      0,      0,        ! 1=run with subgrid gravity wave drag (Choi and Hong 2015)
 use_theta_m                         = 1,                                        ! 1=Compute moist virtual theta, 2=Compute dry theta
 use_q_diabatic                      = 0,                                        ! 1=include Qv, Qc tendencies, more accurate, could make the time-step more restrictive
 c_s                                 = 0.25,   0.25,   0.25,   0.25,   0.25,     ! Smagorinsky coefficient (default : 0.25)
 c_k                                 = 0.15,   0.15,   0.15,   0.15,   0.15,     ! TKE coefficient (default : 0.15)
 h_mom_adv_order                     = 5,      5,      5,      5,      5,        ! horizontal momentum advection order (default : 5)
 v_mom_adv_order                     = 3,      3,      3,      3,      3,        ! vertical   momentum advection order (default : 3)
 h_sca_adv_order                     = 5,      5,      5,      5,      5,        ! horizontal scalar   advection order (default : 5)
 v_sca_adv_order                     = 3,      3,      3,      3,      3,        ! vertical   scalar   advection order (default : 3)
 time_step_sound                     = 6,      6,      6,      6,      6,        ! default : 4, increase if DT/DX > 6s/km, keep even integers
 /

 &bdy_control
 spec_bdy_width                      = 5,
 specified                           = .true.
 /

 &grib2
 /

 &namelist_quilt
 nio_tasks_per_group                 = 0,
 nio_groups                          = 1,
 /

 &diags
 /
 
 &diag
 avg_interval                         = -1,    -1,    -1,    -1,    -1, 
 hesselberg_avg                       = .false.,.false.,.false.,.false.,.false.,
 output_dry_theta_fluxes              = .true.,.true.,.true.,.true.,.true.,
 output_t_fluxes                      = 0,     0,     0,     0,     0,
 output_q_fluxes                      = 0,     0,     0,     0,     0,
 output_u_fluxes                      = 0,     0,     0,     0,     0,
 output_v_fluxes                      = 0,     0,     0,     0,     0,
 output_w_fluxes                      = 0,     0,     0,     0,     0,
 output_stats                         = 1,     1,     1,     3,     3,
 /
